name: Build and Deploy to Kubernetes
on:
  push:
    branches:
      - main
jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      tag: ${{ steps.info.outputs.tag }}
      revision: ${{ steps.info.outputs.revision }}
      reponame: ${{ steps.info.outputs.reponame }}
      reponame_lowercase: ${{ steps.info.outputs.reponame_lowercase }}
    steps:
      - uses: actions/checkout@v3

      - name: Extract commit info
        id: info
        run: |
          tag="$(git describe --tags 2>/dev/null)" || true
          date="$(git log -1 --pretty='format:%cd' --date=short 2>/dev/null)"
          hash="$(git log -1 --pretty='format:%h' 2>/dev/null)"
          test "$tag" && revision="$tag-$hash" || revision="$date-$hash"
          echo "::set-output name=tag::$tag"
          echo "::set-output name=revision::$revision"
          test "$reponame" || reponame="${GITHUB_REPOSITORY##*/}"
          test "$reponame_lowercase" || reponame_lowercase="${reponame,,}"
          echo "::set-output name=reponame::$reponame"
          echo "::set-output name=reponame_lowercase::$reponame_lowercase"

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: '${{ secrets.DOCKER_HUB_USERNAME }}'
          password: '${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}'
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: ./
          file: ./deployment/Dockerfile
          builder: '${{ steps.buildx.outputs.name }}'
          push: true
          tags: |
            ${{ secrets.DOCKER_HUB_USERNAME }}/${{ steps.info.outputs.reponame_lowercase }}:${{ steps.info.outputs.revision }}
          cache-from: type=registry,ref=${{ secrets.DOCKER_HUB_USERNAME }}/${{ steps.info.outputs.reponame_lowercase }}:buildcache
          cache-to: type=registry,ref=${{ secrets.DOCKER_HUB_USERNAME }}/${{ steps.info.outputs.reponame_lowercase }}:buildcache,mode=max

  swagger-codegen:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Export swagger.json
        run: |
          container_id=$(docker create "${{ secrets.DOCKER_HUB_USERNAME }}/${{ needs.build.outputs.reponame_lowercase }}:${{ needs.build.outputs.revision }}")
          docker cp "$container_id:/app/swagger.json" "swagger.json"
          docker rm "$container_id"

      - uses: actions/upload-artifact@v3
        with:
          name: swagger
          path: swagger.json

      - name: Generate client
        run: |
          docker run --rm -v ${PWD}:/local swaggerapi/swagger-codegen-cli-v3 generate \
            -i /local/swagger.json \
            -l typescript-fetch  \
            -o /local/ts \
            -DsupportsES6=true \
            -DnpmName=NjuPsHwApi \
            -DnpmVersion=${{ needs.build.outputs.revision }}

      - uses: actions/upload-artifact@v3
        with:
          name: ts
          path: ts/

  deploy-prod:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v3

      - uses: azure/setup-kubectl@v2.0
      - uses: azure/k8s-set-context@v1
        with:
          method: kubeconfig
          kubeconfig: ${{ secrets.KUBECONFIG }}

      - name: Deploy to Kubernetes
        uses: Azure/k8s-deploy@v4
        with:
          namespace: njupshw
          manifests: |
            deployment/deployment.yml
            deployment/service.yml
          images:
            ${{ secrets.DOCKER_HUB_USERNAME }}/${{ needs.build.outputs.reponame_lowercase }}:${{ needs.build.outputs.revision }}
